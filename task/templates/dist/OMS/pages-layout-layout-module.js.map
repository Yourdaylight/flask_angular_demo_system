{"version":3,"sources":["./src/app/pages/layout/layout.module.ts","./src/app/pages/layout/layout.component.ts","./src/app/pages/layout/layout.component.html","./src/app/pages/layout/layout-routing.module.ts","./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-breadcrumb.js"],"names":[],"mappings":"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","file":"pages-layout-layout-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LayoutRoutingModule } from './layout-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { NzLayoutModule } from 'ng-zorro-antd/layout';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { FormsModule } from '@angular/forms';\n\nimport { IconsProviderModule } from 'src/app/icons-provider.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { NzBreadCrumbModule } from 'ng-zorro-antd/breadcrumb';\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n\n}\n@NgModule({\n  declarations: [LayoutComponent],\n  imports: [\n    FormsModule,\n    HttpClientModule,\n    IconsProviderModule,\n    NzLayoutModule,\n    NzMenuModule,\n    CommonModule,\n    NzBreadCrumbModule,\n    SharedModule,\n    LayoutRoutingModule\n  ],\n  //exports:[LayoutComponent]\n})\nexport class LayoutModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { EventService } from 'src/app/services/event.service';\nimport { NavigateService } from 'src/app/services/navigate.service';\nimport { en_US, zh_CN, NzI18nService } from 'ng-zorro-antd/i18n';\nimport { StorageService } from 'src/app/services/storage.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.less']\n})\nexport class LayoutComponent implements OnInit {\n  isCollapsed = false;\n  menuList: [];\n  langType: string;\n  userName: string;\n  constructor(\n    private navigate: NavigateService,\n    private translateService: TranslateService,\n    private nzModalService: NzModalService,\n    private nzi18n: NzI18nService,\n    private storage: StorageService\n  ) {\n    this.langType = this.translateService.currentLang || '';\n    try {\n      let langObj = JSON.parse(this.langType);\n      if (langObj && typeof langObj === 'object') {\n        this.langType = langObj.key\n      }\n    } catch { }\n  }\n\n  ngOnInit(): void {\n    this.userName = '';\n  }\n  translateFn = (key: string) => {\n    if (key) {\n      return this.translateService.instant(key);\n    }\n  }\n  logOut() {\n    this.nzModalService.confirm({\n      nzContent: this.translateService.instant('CONFIRM_EXIT'),\n      nzTitle: this.translateService.instant('FRIENDSHIP_TIPS'),\n      nzOnOk: () => {\n        this.storage.remove('token');\n        this.navigate.goToLogin();\n      }\n    })\n\n  }\n  langChange(lang: string) {\n    this.langType = lang;\n    this.translateService.use(lang);\n    this.storage.setItem('lang', lang);\n    // 组件国际化切换\n    if (lang == 'en') {\n      this.nzi18n.setLocale(en_US);\n      this.storage.setItem('nzLang', 'en_US');\n    } else {\n      this.nzi18n.setLocale(zh_CN);\n      this.storage.setItem('nzLang', 'zh_CN');\n    }\n    window.location.reload();\n  }\n\n  toggleCollapsed(e: Event) {\n    e.stopPropagation();\n    this.isCollapsed = !this.isCollapsed;\n  }\n}\n","<nz-layout class=\"app-layout\">\n  <nz-sider class=\"menu-sidebar\" nzCollapsible nzWidth=\"256px\" nzBreakpoint=\"md\" [(nzCollapsed)]=\"isCollapsed\"\n    nzWidth=\"200px\" [nzTrigger]=\"null\">\n    <div class=\"sidebar-logo\">\n      <a>\n        <img src=\"assets/img/network-icon.png\" alt=\"logo\">\n        <h1>高考志愿填报系统</h1>\n      </a>\n    </div>\n    <ul nz-menu nzTheme=\"dark\" nzMode=\"inline\" [nzInlineCollapsed]=\"isCollapsed\">\n      <li nz-menu-item nzMatchRouter>\n        <i nz-icon nzType=\"mail\"></i>\n        <span [routerLink]=\"['./comments']\">{{'高校列表' |translate}}</span>\n      </li>\n      \n    </ul>\n  </nz-sider>\n  <nz-layout>\n    <nz-header>\n      <div class=\"app-header\">\n        <span class=\"header-trigger\" >\n          <i class=\"trigger\" nz-icon [nzType]=\"isCollapsed ? 'menu-unfold' : 'menu-fold'\" (click)=\"toggleCollapsed($event)\"></i>\n        </span>\n        <a class=\"lang\">\n          <button nz-button nzType=\"primary\" nzShape=\"circle\" *ngIf=\"langType =='en' \" (click)=\"langChange('zh-cn')\"\n            title=\"Chinese\">中</button>\n          <button nz-button nzType=\"primary\" nzShape=\"circle\" *ngIf=\"langType == 'zh-cn' \" (click)=\"langChange('en')\"\n            [title]=\"'EN' | translate\">EN</button>\n        </a>\n        <a class=\"username\">\n          <button nz-button nzType=\"primary\" nzShape=\"circle\"><i nz-icon nzType=\"user\" nzTheme=\"outline\"></i></button>\n          {{userName}}\n        </a>\n        <a class=\"loginout\" (click)=\"logOut()\">\n          <button nz-button nzType=\"primary\" nzShape=\"circle\"><i nz-icon nzType=\"logout\" nzTheme=\"outline\"></i></button>\n          {{'HOME_EXIT' | translate}}\n        </a>\n      </div>\n    </nz-header>\n    <nz-content>\n      <div class=\"inner-content\">\n        <!-- 全局自动生成面包屑 nzRouteLabel指定路由data里面的key,translateFn为format函数-->\n        <nz-breadcrumb [nzAutoGenerate]=\"true\" [nzRouteLabel]=\"'breadcrumbI18nKey'\" [nzRouteLabelFn]=\"translateFn\"></nz-breadcrumb>\n        <router-outlet></router-outlet>\n      </div>\n    </nz-content>\n    <nz-footer>©版本1.0</nz-footer>\n  </nz-layout>\n</nz-layout>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LayoutComponent } from './layout.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: LayoutComponent,\n    children: [\n      { path: '', redirectTo: 'comments' },\n      {\n        path: 'comments',\n        loadChildren: () => import('./comments/comments.module').then(m => m.CommentsModule),\n        data: {\n          breadcrumbI18nKey: '学校列表'\n        }\n      },\n      {\n        path: 'teacher',\n        loadChildren: () => import('./teacher-comments/teacher-comments.module').then(m => m.TeacherCommentsModule),\n        data: {\n          breadcrumbI18nKey: '我的列表'\n        }\n      },\n      {\n        path: 'myList',\n        loadChildren: () => import('../layout/comments/my-list/my-list.module').then(m => m.MyListModule),\n        data: {\n          breadcrumbI18nKey: '意向列表'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LayoutRoutingModule { }\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation, Injector, NgZone, ChangeDetectorRef, ElementRef, Renderer2, Optional, Input, NgModule } from '@angular/core';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { __decorate, __metadata } from 'tslib';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { Router, ActivatedRoute, NavigationEnd, PRIMARY_OUTLET } from '@angular/router';\nimport { PREFIX } from 'ng-zorro-antd/core/logger';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil, filter, startWith } from 'rxjs/operators';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ng-zorro-antd/dropdown';\nimport * as ɵngcc4 from 'ng-zorro-antd/icon';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/outlet';\n\nfunction NzBreadCrumbComponent_ng_container_1_nz_breadcrumb_item_1_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"nz-breadcrumb-item\");\n    ɵngcc0.ɵɵelementStart(1, \"a\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NzBreadCrumbComponent_ng_container_1_nz_breadcrumb_item_1_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const breadcrumb_r2 = ctx.$implicit; const ctx_r3 = ɵngcc0.ɵɵnextContext(2); return ctx_r3.navigate(breadcrumb_r2.url, $event); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const breadcrumb_r2 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"href\", breadcrumb_r2.url, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(breadcrumb_r2.label);\n} }\nfunction NzBreadCrumbComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzBreadCrumbComponent_ng_container_1_nz_breadcrumb_item_1_Template, 3, 2, \"nz-breadcrumb-item\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.breadcrumbs);\n} }\nconst _c0 = [\"*\"];\nfunction NzBreadCrumbItemComponent_ng_container_0_ng_template_2_Template(rf, ctx) { }\nfunction NzBreadCrumbItemComponent_ng_container_0_i_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 6);\n} }\nfunction NzBreadCrumbItemComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 3);\n    ɵngcc0.ɵɵtemplate(2, NzBreadCrumbItemComponent_ng_container_0_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵtemplate(3, NzBreadCrumbItemComponent_ng_container_0_i_3_Template, 1, 0, \"i\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    const _r1 = ɵngcc0.ɵɵreference(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzDropdownMenu\", ctx_r0.nzOverlay);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !!ctx_r0.nzOverlay);\n} }\nfunction NzBreadCrumbItemComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NzBreadCrumbItemComponent_span_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r6.nzBreadCrumbComponent.nzSeparator, \" \");\n} }\nfunction NzBreadCrumbItemComponent_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtemplate(1, NzBreadCrumbItemComponent_span_3_ng_container_1_Template, 2, 1, \"ng-container\", 9);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r3.nzBreadCrumbComponent.nzSeparator);\n} }\nclass NzBreadCrumbComponent {\n    constructor(injector, ngZone, cdr, elementRef, renderer, directionality) {\n        this.injector = injector;\n        this.ngZone = ngZone;\n        this.cdr = cdr;\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.directionality = directionality;\n        this.nzAutoGenerate = false;\n        this.nzSeparator = '/';\n        this.nzRouteLabel = 'breadcrumb';\n        this.nzRouteLabelFn = label => label;\n        this.breadcrumbs = [];\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        renderer.addClass(elementRef.nativeElement, 'ant-breadcrumb');\n    }\n    ngOnInit() {\n        var _a;\n        if (this.nzAutoGenerate) {\n            this.registerRouterChange();\n        }\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.prepareComponentForRtl();\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n        this.prepareComponentForRtl();\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    navigate(url, e) {\n        e.preventDefault();\n        this.ngZone.run(() => this.injector.get(Router).navigateByUrl(url).then()).then();\n    }\n    registerRouterChange() {\n        try {\n            const router = this.injector.get(Router);\n            const activatedRoute = this.injector.get(ActivatedRoute);\n            router.events\n                .pipe(filter(e => e instanceof NavigationEnd), takeUntil(this.destroy$), startWith(true) // trigger initial render\n            )\n                .subscribe(() => {\n                this.breadcrumbs = this.getBreadcrumbs(activatedRoute.root);\n                this.cdr.markForCheck();\n            });\n        }\n        catch (e) {\n            throw new Error(`${PREFIX} You should import RouterModule if you want to use 'NzAutoGenerate'.`);\n        }\n    }\n    getBreadcrumbs(route, url = '', breadcrumbs = []) {\n        const children = route.children;\n        // If there's no sub root, then stop the recurse and returns the generated breadcrumbs.\n        if (children.length === 0) {\n            return breadcrumbs;\n        }\n        for (const child of children) {\n            if (child.outlet === PRIMARY_OUTLET) {\n                // Only parse components in primary router-outlet (in another word, router-outlet without a specific name).\n                // Parse this layer and generate a breadcrumb item.\n                const routeUrl = child.snapshot.url\n                    .map(segment => segment.path)\n                    .filter(path => path)\n                    .join('/');\n                // Do not change nextUrl if routeUrl is falsy. This happens when it's a route lazy loading other modules.\n                const nextUrl = !!routeUrl ? url + `/${routeUrl}` : url;\n                const breadcrumbLabel = this.nzRouteLabelFn(child.snapshot.data[this.nzRouteLabel]);\n                // If have data, go to generate a breadcrumb for it.\n                if (routeUrl && breadcrumbLabel) {\n                    const breadcrumb = {\n                        label: breadcrumbLabel,\n                        params: child.snapshot.params,\n                        url: nextUrl\n                    };\n                    breadcrumbs.push(breadcrumb);\n                }\n                return this.getBreadcrumbs(child, nextUrl, breadcrumbs);\n            }\n        }\n        return breadcrumbs;\n    }\n    prepareComponentForRtl() {\n        if (this.dir === 'rtl') {\n            this.renderer.addClass(this.elementRef.nativeElement, 'ant-breadcrumb-rtl');\n        }\n        else {\n            this.renderer.removeClass(this.elementRef.nativeElement, 'ant-breadcrumb-rtl');\n        }\n    }\n}\nNzBreadCrumbComponent.ɵfac = function NzBreadCrumbComponent_Factory(t) { return new (t || NzBreadCrumbComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nNzBreadCrumbComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzBreadCrumbComponent, selectors: [[\"nz-breadcrumb\"]], inputs: { nzAutoGenerate: \"nzAutoGenerate\", nzSeparator: \"nzSeparator\", nzRouteLabel: \"nzRouteLabel\", nzRouteLabelFn: \"nzRouteLabelFn\" }, exportAs: [\"nzBreadcrumb\"], ngContentSelectors: _c0, decls: 2, vars: 1, consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]], template: function NzBreadCrumbComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵtemplate(1, NzBreadCrumbComponent_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzAutoGenerate && ctx.breadcrumbs.length);\n    } }, directives: function () { return [ɵngcc2.NgIf, ɵngcc2.NgForOf, NzBreadCrumbItemComponent]; }, encapsulation: 2, changeDetection: 0 });\nNzBreadCrumbComponent.ctorParameters = () => [\n    { type: Injector },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNzBreadCrumbComponent.propDecorators = {\n    nzAutoGenerate: [{ type: Input }],\n    nzSeparator: [{ type: Input }],\n    nzRouteLabel: [{ type: Input }],\n    nzRouteLabelFn: [{ type: Input }]\n};\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzBreadCrumbComponent.prototype, \"nzAutoGenerate\", void 0);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzBreadCrumbComponent, [{\n        type: Component,\n        args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                selector: 'nz-breadcrumb',\n                exportAs: 'nzBreadcrumb',\n                preserveWhitespaces: false,\n                template: `\n    <ng-content></ng-content>\n    <ng-container *ngIf=\"nzAutoGenerate && breadcrumbs.length\">\n      <nz-breadcrumb-item *ngFor=\"let breadcrumb of breadcrumbs\">\n        <a [attr.href]=\"breadcrumb.url\" (click)=\"navigate(breadcrumb.url, $event)\">{{ breadcrumb.label }}</a>\n      </nz-breadcrumb-item>\n    </ng-container>\n  `\n            }]\n    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { nzAutoGenerate: [{\n            type: Input\n        }], nzSeparator: [{\n            type: Input\n        }], nzRouteLabel: [{\n            type: Input\n        }], nzRouteLabelFn: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBreadCrumbItemComponent {\n    constructor(nzBreadCrumbComponent) {\n        this.nzBreadCrumbComponent = nzBreadCrumbComponent;\n    }\n}\nNzBreadCrumbItemComponent.ɵfac = function NzBreadCrumbItemComponent_Factory(t) { return new (t || NzBreadCrumbItemComponent)(ɵngcc0.ɵɵdirectiveInject(NzBreadCrumbComponent)); };\nNzBreadCrumbItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzBreadCrumbItemComponent, selectors: [[\"nz-breadcrumb-item\"]], inputs: { nzOverlay: \"nzOverlay\" }, exportAs: [\"nzBreadcrumbItem\"], ngContentSelectors: _c0, decls: 4, vars: 3, consts: [[4, \"ngIf\", \"ngIfElse\"], [\"noMenuTpl\", \"\"], [\"class\", \"ant-breadcrumb-separator\", 4, \"ngIf\"], [\"nz-dropdown\", \"\", 1, \"ant-breadcrumb-overlay-link\", 3, \"nzDropdownMenu\"], [3, \"ngTemplateOutlet\"], [\"nz-icon\", \"\", \"nzType\", \"down\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"down\"], [1, \"ant-breadcrumb-link\"], [1, \"ant-breadcrumb-separator\"], [4, \"nzStringTemplateOutlet\"]], template: function NzBreadCrumbItemComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NzBreadCrumbItemComponent_ng_container_0_Template, 4, 3, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzBreadCrumbItemComponent_ng_template_1_Template, 2, 0, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(3, NzBreadCrumbItemComponent_span_3_Template, 2, 1, \"span\", 2);\n    } if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !!ctx.nzOverlay)(\"ngIfElse\", _r1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzBreadCrumbComponent.nzSeparator);\n    } }, directives: [ɵngcc2.NgIf, ɵngcc3.NzDropDownDirective, ɵngcc2.NgTemplateOutlet, ɵngcc4.NzIconDirective, ɵngcc5.NzStringTemplateOutletDirective], encapsulation: 2, changeDetection: 0 });\nNzBreadCrumbItemComponent.ctorParameters = () => [\n    { type: NzBreadCrumbComponent }\n];\nNzBreadCrumbItemComponent.propDecorators = {\n    nzOverlay: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzBreadCrumbItemComponent, [{\n        type: Component,\n        args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                selector: 'nz-breadcrumb-item',\n                exportAs: 'nzBreadcrumbItem',\n                preserveWhitespaces: false,\n                template: `\n    <ng-container *ngIf=\"!!nzOverlay; else noMenuTpl\">\n      <span class=\"ant-breadcrumb-overlay-link\" nz-dropdown [nzDropdownMenu]=\"nzOverlay\">\n        <ng-template [ngTemplateOutlet]=\"noMenuTpl\"></ng-template>\n        <i *ngIf=\"!!nzOverlay\" nz-icon nzType=\"down\"></i>\n      </span>\n    </ng-container>\n\n    <ng-template #noMenuTpl>\n      <span class=\"ant-breadcrumb-link\">\n        <ng-content></ng-content>\n      </span>\n    </ng-template>\n\n    <span class=\"ant-breadcrumb-separator\" *ngIf=\"nzBreadCrumbComponent.nzSeparator\">\n      <ng-container *nzStringTemplateOutlet=\"nzBreadCrumbComponent.nzSeparator\">\n        {{ nzBreadCrumbComponent.nzSeparator }}\n      </ng-container>\n    </span>\n  `\n            }]\n    }], function () { return [{ type: NzBreadCrumbComponent }]; }, { nzOverlay: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBreadCrumbSeparatorComponent {\n}\nNzBreadCrumbSeparatorComponent.ɵfac = function NzBreadCrumbSeparatorComponent_Factory(t) { return new (t || NzBreadCrumbSeparatorComponent)(); };\nNzBreadCrumbSeparatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzBreadCrumbSeparatorComponent, selectors: [[\"nz-breadcrumb-separator\"]], exportAs: [\"nzBreadcrumbSeparator\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"ant-breadcrumb-separator\"]], template: function NzBreadCrumbSeparatorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzBreadCrumbSeparatorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-breadcrumb-separator',\n                exportAs: 'nzBreadcrumbSeparator',\n                template: `\n    <span class=\"ant-breadcrumb-separator\">\n      <ng-content></ng-content>\n    </span>\n  `\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBreadCrumbModule {\n}\nNzBreadCrumbModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzBreadCrumbModule });\nNzBreadCrumbModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NzBreadCrumbModule_Factory(t) { return new (t || NzBreadCrumbModule)(); }, imports: [[CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule], BidiModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzBreadCrumbModule, { declarations: function () { return [NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent]; }, imports: function () { return [CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule]; }, exports: function () { return [BidiModule, NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzBreadCrumbModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule],\n                declarations: [NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent],\n                exports: [BidiModule, NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent]\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbModule, NzBreadCrumbSeparatorComponent };\n\n//# sourceMappingURL=ng-zorro-antd-breadcrumb.js.map"],"sourceRoot":"webpack:///"}